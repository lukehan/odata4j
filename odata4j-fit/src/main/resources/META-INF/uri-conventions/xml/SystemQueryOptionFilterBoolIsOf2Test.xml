<?xml version="1.0" encoding="utf-8" standalone="yes"?><error xmlns="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata">  <code></code>  <message xml:lang="en-US">Not Implemented</message>  <innererror>    <message>Unable to cast the type 'System.String' to type 'System.Object'. LINQ to Entities only supports casting Entity Data Model primitive types.</message>    <type>System.NotSupportedException</type>    <stacktrace>   at System.Data.Objects.ELinq.ExpressionConverter.ValidateAndAdjustCastTypes(TypeUsage toType,TypeUsage fromType,Type toClrType,Type fromClrType)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.GetCastTargetType(TypeUsage fromType,Type toClrType,Type fromClrType,Boolean preserveCastForDateTime)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.ConvertTranslator.TranslateUnary(ExpressionConverter parent,UnaryExpression unary,DbExpression operand)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.UnaryTranslator.TypedTranslate(ExpressionConverter parent,UnaryExpression linq)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.TranslateExpression(Expression linq)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.IsTranslator.TypedTranslate(ExpressionConverter parent,TypeBinaryExpression linq)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.TranslateLambda(LambdaExpression lambda,DbExpression input)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.Translate(ExpressionConverter parent,MethodCallExpression call,DbExpression&amp; source,DbExpressionBinding&amp; sourceBinding,DbExpression&amp; lambda)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.Translate(ExpressionConverter parent,MethodCallExpression call)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TypedTranslate(ExpressionConverter parent,MethodCallExpression linq)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.TranslateExpression(Expression linq)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.Translate(ExpressionConverter parent,MethodCallExpression call,DbExpression&amp; source,DbExpressionBinding&amp; sourceBinding,DbExpression&amp; lambda)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.Translate(ExpressionConverter parent,MethodCallExpression call)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TypedTranslate(ExpressionConverter parent,MethodCallExpression linq)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.TranslateExpression(Expression linq)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.UnarySequenceMethodTranslator.Translate(ExpressionConverter parent,MethodCallExpression call)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TypedTranslate(ExpressionConverter parent,MethodCallExpression linq)&#xD;   at System.Data.Objects.ELinq.ExpressionConverter.TranslateExpression(Expression linq)&#xD;   at System.Data.Objects.ELinq.ELinqQueryState.GetExecutionPlan(Nullable`1 forMergeOption)&#xD;   at System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)&#xD;   at System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()&#xD;   at System.Data.Objects.ObjectQuery`1.GetEnumeratorInternal()&#xD;   at System.Data.Services.WebUtil.GetRequestEnumerator(IEnumerable enumerable)</stacktrace>  </innererror></error>